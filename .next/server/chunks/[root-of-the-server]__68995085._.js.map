{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 61, "column": 0}, "map": {"version":3,"sources":["file:///D:/nextjslearning/hunting-coder/src/app/api/postcontact/route.js"],"sourcesContent":["// app/api/postcontact/route.js\r\nimport { NextResponse } from \"next/server\";\r\nimport { promises as fs } from \"fs\";\r\nimport nodemailer from \"nodemailer\";\r\n\r\nexport async function POST(req) {\r\n    try {\r\n        const transporter = nodemailer.createTransport({\r\n            service: \"gmail\",\r\n            auth: {\r\n                user: process.env.SMTP_USER,  // your Gmail\r\n                pass: process.env.SMTP_PASS,  // app password (not your Gmail password)\r\n            },\r\n        });\r\n\r\n        const body = await req.json();\r\n        const { username, email, description } = body;\r\n\r\n        if (!username || !email || !description) {\r\n            return NextResponse.json(\r\n                { message: \"Please fill all the fields\", data: { username, email, description } },\r\n                { status: 400 }\r\n            );\r\n        }\r\n\r\n        // Write data to contact.json\r\n        await fs.writeFile(`${process.cwd()}/contactdata/contact.json`, JSON.stringify(body, null, 2));\r\n        const data = await fs.readFile(`${process.cwd()}/contactdata/contact.json`, \"utf-8\");\r\n        await transporter.sendMail({ to: \"hanzalarehman804@gmail.com\", subject: \"Hunting Coder user\", text: data });\r\n        return NextResponse.json({\r\n            message: \"Contact saved successfully!\",\r\n            data: body,\r\n        });\r\n    } catch (error) {\r\n        return NextResponse.json(\r\n            { error: \"Invalid Request\", details: error.message },\r\n            { status: 400 }\r\n        );\r\n    }\r\n}\r\n\r\n"],"names":[],"mappings":"AAAA,+BAA+B;;;;;AAC/B;AACA;;;;;;;;;AAGO,eAAe,KAAK,GAAG;IAC1B,IAAI;QACA,MAAM,cAAc,WAAW,eAAe,CAAC;YAC3C,SAAS;YACT,MAAM;gBACF,MAAM,QAAQ,GAAG,CAAC,SAAS;gBAC3B,MAAM,QAAQ,GAAG,CAAC,SAAS;YAC/B;QACJ;QAEA,MAAM,OAAO,MAAM,IAAI,IAAI;QAC3B,MAAM,EAAE,QAAQ,EAAE,KAAK,EAAE,WAAW,EAAE,GAAG;QAEzC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,aAAa;YACrC,OAAO,gJAAY,CAAC,IAAI,CACpB;gBAAE,SAAS;gBAA8B,MAAM;oBAAE;oBAAU;oBAAO;gBAAY;YAAE,GAChF;gBAAE,QAAQ;YAAI;QAEtB;QAEA,6BAA6B;QAC7B,MAAM,yGAAE,CAAC,SAAS,CAAC,GAAG,QAAQ,GAAG,GAAG,yBAAyB,CAAC,EAAE,KAAK,SAAS,CAAC,MAAM,MAAM;QAC3F,MAAM,OAAO,MAAM,yGAAE,CAAC,QAAQ,CAAC,GAAG,QAAQ,GAAG,GAAG,yBAAyB,CAAC,EAAE;QAC5E,MAAM,YAAY,QAAQ,CAAC;YAAE,IAAI;YAA8B,SAAS;YAAsB,MAAM;QAAK;QACzG,OAAO,gJAAY,CAAC,IAAI,CAAC;YACrB,SAAS;YACT,MAAM;QACV;IACJ,EAAE,OAAO,OAAO;QACZ,OAAO,gJAAY,CAAC,IAAI,CACpB;YAAE,OAAO;YAAmB,SAAS,MAAM,OAAO;QAAC,GACnD;YAAE,QAAQ;QAAI;IAEtB;AACJ","debugId":null}}]
}